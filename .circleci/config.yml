version: 2.1

orbs:
  node: circleci/node@4.1

jobs:
  install_dependencies:
    docker:
      - image: node:18
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: npm run frontend:install
      - run: npm run backend:install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./store/store-frontend/node_modules
            - ./store/store-backend/node_modules

  build_frontend:
    docker:
      - image: node:18
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run frontend:build

  build_backend:
    docker:
      - image: node:18
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run backend:build

  test_backend:
    docker:
       - image: node:18
       - image: postgres:13
         environment:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydatabase
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: Warten auf die Datenbank
        command: dockerize -wait tcp://localhost:5432 -timeout 1m
    - run:
        name: Backend-Tests
        command: cd store/store-backend && npm run test
        environment:
          DATABASE_URL: postgres://myuser:mypassword@localhost:5432/mydatabase

workflows:
  version: 2
  build_and_test:
    jobs:
      - install_dependencies
      - build_frontend:
          requires:
            - install_dependencies
      - build_backend:
          requires:
            - install_dependencies
      - test_backend:
          requires:
            - build_backend
